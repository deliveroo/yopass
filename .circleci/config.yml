version: 2.1

global_context: &global_context
  context:
    - org-global

global_remote_docker: &global_remote_docker
  setup_remote_docker:
    docker_layer_caching: true
    version: docker23
global_dockerhub_auth: &global_dockerhub_auth
  auth:
    username: $GLOBAL_DOCKERHUB_USERNAME
    password: $GLOBAL_DOCKERHUB_PASSWORD
global_dockerhub_login: &global_dockerhub_login
  run:
    name: Authenticate with hub.docker.com - DockerHub
    command: docker login -u $GLOBAL_DOCKERHUB_USERNAME -p $GLOBAL_DOCKERHUB_PASSWORD

executors:
  docker-container:
    docker:
      - image: deliveroo/circleci:latest
        <<: *global_dockerhub_auth

build_docker_image: &build_docker_image
  executor: docker-container
  steps:
    - attach_workspace:
        at: /tmp/workspace
    - *global_remote_docker
    - *global_dockerhub_login
    - checkout
    - run:
        name: Docker build
        command: |
          docker build --tag "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" . \
          && docker save "${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" \
            --output "/tmp/workspace/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}".tar
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
          - '*.tar'

test_yopass_secret: &test_yopass_secret
  executir: docker-container
  steps:
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: Add and retrieve test secret
        command: |
          docker compose up -d
          sleep 5
          yopass_result=$(docker compose logs selenium_browser | cut -d '|' -f2 | xargs 2>&1)
          if [ "$yopass_result" = "PASS" ]; then
            echo "Secret successfully generated and retrieved from Yopass"
          else
            echo "Secret generation and retrieval failed"
            exit 1
          fi


push_image_to_ecr: &push_image_to_ecr
  executor: docker-container
  steps:
    - attach_workspace:
        at: /tmp/workspace
    - *global_remote_docker
    - *global_dockerhub_login
    - run:
        name: Load docker image
        command: |
          docker load --input "/tmp/workspace/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}".tar
    - run:
        name: Push image to ECR
        command: |
          `print_env ${TARGET}`
          push_image_to_ecr

filter_master_branch: &filter_master_branch
  filters:
    branches:
      only:
      - master

filter_staging_branch: &filter_staging_branch
  filters:
    branches:
      only:
      - staging

jobs:
  build_docker_image:
    executor: docker-container
    resource_class: small
    <<: *build_docker_image

  add_and_retrieve_test_secret:
    executor: docker-container
    resource_class: small
    <<: *test_yopass_secret

  push_ecr_image_to_staging:
    executor: docker-container
    resource_class: small
    environment:
      TARGET: staging
    <<: *push_image_to_ecr

  push_ecr_image_to_production:
    executor: docker-container
    resource_class: small
    environment:
      TARGET: production
    <<: *push_image_to_ecr

workflows:
  version: 2
  build:
    jobs:
      - build_docker_image:
          <<: *global_context
      - add_and_retrieve_test_secret:
          <<: *global_context
          requires:
            - test_yopass_secret
      - push_ecr_image_to_staging:
          <<: *global_context
          <<: *filter_staging_branch
          requires:
            - build_docker_image
      - push_ecr_image_to_production:
          <<: *global_context
          <<: *filter_master_branch
          requires:
            - build_docker_image
